#include <urdu.h>
/*
  Urdu.h helpers (Python-like Urdu keywords)

  Function syntax and datatypes:
  - int parhle(const char *prompt)
      • Prints prompt, reads an integer, returns it as int
      • Example: int x = parhle("Number: ");

  - void parhle_str(const char *prompt, char *buf, int size)
      • Prints prompt, reads a line of text into buf (C string, null-terminated)
      • buf must be a char array with capacity >= size; newline is trimmed
      • Example: char name[100]; parhle_str("Name: ", name, sizeof(name));

  - float parhle_float(const char *prompt)
      • Prints prompt, reads a floating-point number, returns float
      • Example: float f = parhle_float("Float: ");

  - double parhle_double(const char *prompt)
      • Prints prompt, reads a double-precision number, returns double
      • Example: double d = parhle_double("Double: ");

  - void likhde(const char *text)
      • Prints text without newline
      • Example: likhde("Hello");

  - void likhde_int(int n)
      • Prints integer without newline
      • Example: likhde_int(42);

  - void likhde_float(float n)
      • Prints float with 2 decimal places, without newline
      • Example: likhde_float(3.14f);

  - void likhde_double(double n)
      • Prints double with 2 decimal places, without newline
      • Example: likhde_double(2.71828);

  - void likhde_line(const char *text)
      • Prints text followed by newline
      • Example: likhde_line("Hello line");

  - void likhde_int_line(int n)
      • Prints integer followed by newline
      • Example: likhde_int_line(7);

  - void likhde_float_line(float n)
      • Prints float (2 decimals) followed by newline
      • Example: likhde_float_line(1.23f);

  - Macro: jab_tak(condition)
      • Urdu alias for C while(condition)
      • Example: jab_tak(i > 0) { /* body */ /* }

  - Macros: karo ... jab_(condition)
      • Urdu alias for C do { ... } while (condition);
      • Example: karo { /* body */ /* } jab_(i > 0);
*/

int main(void) {
    char naam[100]; /* char array (C-string buffer) to store name; capacity 100 chars */

    likhde_line("Assalam-o-Alaikum! Yeh Urdu-h style demo hai."); /* print greeting with newline */

    int adad = parhle("Koi poora adad likho: "); /* prompt and read int → store in adad */
    float ashari = parhle_float("Koi float likho: "); /* prompt and read float → store in ashari */
    double baraAshari = parhle_double("Koi double likho: "); /* prompt and read double → store in baraAshari */
    parhle_str("Apna naam likho: ", naam, sizeof(naam)); /* prompt and read string into naam buffer */

    likhde_line(""); /* print empty line */
    likhde_line("Aap ne jo diya:"); /* section title */

    likhde("Naam: "); /* label without newline */
    likhde_line(naam); /* print name with newline */

    likhde("Adad: "); /* label without newline */
    likhde_int_line(adad); /* print int with newline */

    likhde("Float: "); /* label without newline */
    likhde_float_line(ashari); /* print float (2dp) with newline */

    likhde("Double (bila newline): "); /* label without newline */
    likhde_double(baraAshari); /* print double (2dp) without newline */
    likhde("\n"); /* manually add newline after previous print */

    likhde_line(""); /* blank line */
    likhde_line("Thori si hisaab kitab:"); /* section title */

    likhde("Adad x 2 = "); /* label */
    likhde_int_line(adad * 2); /* compute and print integer expression with newline */

    likhde("Float / 2 = "); /* label */
    likhde_float_line(ashari / 2.0f); /* compute and print float (2dp) with newline */

    double jama = adad + (double)ashari + baraAshari; /* sum using double precision */
    likhde("Teenon ka jama = "); /* label */
    likhde_double(jama); /* print double without newline */
    likhde("\n"); /* newline */

    /* jab_tak demo: Urdu alias for while(condition) */
    likhde_line("");
    likhde_line("jab_tak demo: 3 se 1 tak countdown");
    int ginti = 3; /* int: loop counter */
    jab_tak((ginti > 0)) { /* while (ginti > 0) */
        likhde_int(ginti); /* print current count without newline */
        likhde(" "); /* space */
        ginti--; /* decrement */
    }
    likhde("\n"); /* newline after loop output */

    /* karo ... jab_(condition) demo: Urdu alias for do { } while (...) */
    likhde_line("");
    likhde_line("karo ... jab_ demo: kam az kam aik dafa chalna chahiye");
    int num = 0; /* int: will increment and stop when >= 3 */
    karo { /* do { */
        likhde("num = ");
        likhde_int(num);
        likhde("\n");
        num++; /* body runs at least once */
    } jab_(num < 3); /* } while (num < 3); */

    likhde_line(""); /* blank line */
    likhde_line("Shukriya! Allah Hafiz."); /* closing message */

    return 0; /* indicate successful program termination */
}

